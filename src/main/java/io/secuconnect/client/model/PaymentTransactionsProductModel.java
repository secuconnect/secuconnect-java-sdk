/*
 * SecuConnect API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.secuconnect.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.secuconnect.client.model.PaymentTransactionsProductModelCustomer;
import io.secuconnect.client.model.PaymentTransactionsProductModelDetails;
import io.secuconnect.client.model.PaymentTransactionsProductModelMerchant;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;

/**
 * PaymentTransactionsProductModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-08-16T14:16:54.610+02:00")
public class PaymentTransactionsProductModel {
  @SerializedName("object")
  private String object = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("merchant")
  private PaymentTransactionsProductModelMerchant merchant = null;

  @SerializedName("trans_id")
  private Integer transId = null;

  @SerializedName("product_id")
  private Integer productId = null;

  @SerializedName("product")
  private String product = null;

  @SerializedName("product_raw")
  private String productRaw = null;

  @SerializedName("zahlungsmittel_id")
  private Integer zahlungsmittelId = null;

  @SerializedName("contract_id")
  private Integer contractId = null;

  @SerializedName("amount")
  private Integer amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("created")
  private DateTime created = null;

  @SerializedName("updated")
  private DateTime updated = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("status_text")
  private String statusText = null;

  @SerializedName("details")
  private PaymentTransactionsProductModelDetails details = null;

  @SerializedName("customer")
  private PaymentTransactionsProductModelCustomer customer = null;

  public PaymentTransactionsProductModel object(String object) {
    this.object = object;
    return this;
  }

   /**
   * Object of payment transaction
   * @return object
  **/
  @ApiModelProperty(value = "Object of payment transaction")
  public String getObject() {
    return object;
  }

  public void setObject(String object) {
    this.object = object;
  }

  public PaymentTransactionsProductModel id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id of payment transaction
   * @return id
  **/
  @ApiModelProperty(value = "Id of payment transaction")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PaymentTransactionsProductModel merchant(PaymentTransactionsProductModelMerchant merchant) {
    this.merchant = merchant;
    return this;
  }

   /**
   * Get merchant
   * @return merchant
  **/
  @ApiModelProperty(value = "")
  public PaymentTransactionsProductModelMerchant getMerchant() {
    return merchant;
  }

  public void setMerchant(PaymentTransactionsProductModelMerchant merchant) {
    this.merchant = merchant;
  }

  public PaymentTransactionsProductModel transId(Integer transId) {
    this.transId = transId;
    return this;
  }

   /**
   * Transaction identifier
   * @return transId
  **/
  @ApiModelProperty(value = "Transaction identifier")
  public Integer getTransId() {
    return transId;
  }

  public void setTransId(Integer transId) {
    this.transId = transId;
  }

  public PaymentTransactionsProductModel productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Product identifier
   * @return productId
  **/
  @ApiModelProperty(value = "Product identifier")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public PaymentTransactionsProductModel product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Product type
   * @return product
  **/
  @ApiModelProperty(value = "Product type")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }

  public PaymentTransactionsProductModel productRaw(String productRaw) {
    this.productRaw = productRaw;
    return this;
  }

   /**
   * the name of the payment product
   * @return productRaw
  **/
  @ApiModelProperty(value = "the name of the payment product")
  public String getProductRaw() {
    return productRaw;
  }

  public void setProductRaw(String productRaw) {
    this.productRaw = productRaw;
  }

  public PaymentTransactionsProductModel zahlungsmittelId(Integer zahlungsmittelId) {
    this.zahlungsmittelId = zahlungsmittelId;
    return this;
  }

   /**
   * The internal id of the stored payment instrument.
   * @return zahlungsmittelId
  **/
  @ApiModelProperty(value = "The internal id of the stored payment instrument.")
  public Integer getZahlungsmittelId() {
    return zahlungsmittelId;
  }

  public void setZahlungsmittelId(Integer zahlungsmittelId) {
    this.zahlungsmittelId = zahlungsmittelId;
  }

  public PaymentTransactionsProductModel contractId(Integer contractId) {
    this.contractId = contractId;
    return this;
  }

   /**
   * Contract identifier
   * @return contractId
  **/
  @ApiModelProperty(value = "Contract identifier")
  public Integer getContractId() {
    return contractId;
  }

  public void setContractId(Integer contractId) {
    this.contractId = contractId;
  }

  public PaymentTransactionsProductModel amount(Integer amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Total amount of payment in cents (or the smallest cash unit of the relevant currency)
   * @return amount
  **/
  @ApiModelProperty(value = "Total amount of payment in cents (or the smallest cash unit of the relevant currency)")
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }

  public PaymentTransactionsProductModel currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * ISO 4217 code of currency, eg EUR for Euro.
   * @return currency
  **/
  @ApiModelProperty(value = "ISO 4217 code of currency, eg EUR for Euro.")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PaymentTransactionsProductModel created(DateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Created at date
   * @return created
  **/
  @ApiModelProperty(value = "Created at date")
  public DateTime getCreated() {
    return created;
  }

  public void setCreated(DateTime created) {
    this.created = created;
  }

  public PaymentTransactionsProductModel updated(DateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Updated at date
   * @return updated
  **/
  @ApiModelProperty(value = "Updated at date")
  public DateTime getUpdated() {
    return updated;
  }

  public void setUpdated(DateTime updated) {
    this.updated = updated;
  }

  public PaymentTransactionsProductModel status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * WTF??
   * @return status
  **/
  @ApiModelProperty(value = "WTF??")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public PaymentTransactionsProductModel statusText(String statusText) {
    this.statusText = statusText;
    return this;
  }

   /**
   * Transaction status
   * @return statusText
  **/
  @ApiModelProperty(value = "Transaction status")
  public String getStatusText() {
    return statusText;
  }

  public void setStatusText(String statusText) {
    this.statusText = statusText;
  }

  public PaymentTransactionsProductModel details(PaymentTransactionsProductModelDetails details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public PaymentTransactionsProductModelDetails getDetails() {
    return details;
  }

  public void setDetails(PaymentTransactionsProductModelDetails details) {
    this.details = details;
  }

  public PaymentTransactionsProductModel customer(PaymentTransactionsProductModelCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public PaymentTransactionsProductModelCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(PaymentTransactionsProductModelCustomer customer) {
    this.customer = customer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentTransactionsProductModel paymentTransactionsProductModel = (PaymentTransactionsProductModel) o;
    return Objects.equals(this.object, paymentTransactionsProductModel.object) &&
        Objects.equals(this.id, paymentTransactionsProductModel.id) &&
        Objects.equals(this.merchant, paymentTransactionsProductModel.merchant) &&
        Objects.equals(this.transId, paymentTransactionsProductModel.transId) &&
        Objects.equals(this.productId, paymentTransactionsProductModel.productId) &&
        Objects.equals(this.product, paymentTransactionsProductModel.product) &&
        Objects.equals(this.productRaw, paymentTransactionsProductModel.productRaw) &&
        Objects.equals(this.zahlungsmittelId, paymentTransactionsProductModel.zahlungsmittelId) &&
        Objects.equals(this.contractId, paymentTransactionsProductModel.contractId) &&
        Objects.equals(this.amount, paymentTransactionsProductModel.amount) &&
        Objects.equals(this.currency, paymentTransactionsProductModel.currency) &&
        Objects.equals(this.created, paymentTransactionsProductModel.created) &&
        Objects.equals(this.updated, paymentTransactionsProductModel.updated) &&
        Objects.equals(this.status, paymentTransactionsProductModel.status) &&
        Objects.equals(this.statusText, paymentTransactionsProductModel.statusText) &&
        Objects.equals(this.details, paymentTransactionsProductModel.details) &&
        Objects.equals(this.customer, paymentTransactionsProductModel.customer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(object, id, merchant, transId, productId, product, productRaw, zahlungsmittelId, contractId, amount, currency, created, updated, status, statusText, details, customer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentTransactionsProductModel {\n");
    
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    transId: ").append(toIndentedString(transId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    productRaw: ").append(toIndentedString(productRaw)).append("\n");
    sb.append("    zahlungsmittelId: ").append(toIndentedString(zahlungsmittelId)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusText: ").append(toIndentedString(statusText)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

